buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/libs-snapshot' }

        jcenter()
        maven { url 'http://nexus.biclub.com/repository/maven-central/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        // tag::build[]
        classpath('com.bmuschko:gradle-docker-plugin:3.2.4')
        // end::build[]
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'io.chainedin.biclub'
version '1.0-SNAPSHOT'


def CommonGradleScript = file("deps/common/build.gradle")
if (CommonGradleScript.exists()) {
    apply from: CommonGradleScript
}


import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStopContainer
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile


docker {
    url = 'http://127.0.0.1:2375'

    registryCredentials {
        url = 'https://harbor.chainwinner.cn/v2/'
        username = 'develop'
        password = '1q2w3e.Chainedin'

        email = 'develop@chainedin.io'
    }
}

task createDockerfile(type: Dockerfile, dependsOn: bootJar) {
    destFile = project.file('build/docker/Dockerfile')
    from 'frolvlad/alpine-oraclejdk8:slim'
    maintainer 'Simon Shieh "develop@chainedin.io"'
    runCommand 'mkdir /root/.ssh'
    volume '/root/.ssh'
    exposePort 8888
    addFile { 'configserver-1.0-SNAPSHOT.jar' } { 'app.jar' }
    entryPoint "java", "-jar", "/app.jar"
    //entryPoint "/bin/sh"
}


task buildImage(type: DockerBuildImage, dependsOn: createDockerfile) {
    inputDir = createDockerfile.destFile.parentFile
    tag = "harbor.chainwinner.cn/tools/configserver:release"
    doFirst {
        copy {
            from jar
            into inputDir
        }
    }
}

task createContainer(type: DockerCreateContainer, dependsOn: buildImage) {
    targetImageId { buildImage.getImageId() }
    image = buildImage.tag
    containerName = 'configserver'
    stdinOpen = true
    tty = true
    exposePorts('tcp', [8888])
    portBindings = ['8888:8888']

}

task startContainer(type: DockerStartContainer, dependsOn: createContainer) {
    targetContainerId { createContainer.getContainerId() }
}

task stopContainer(type: DockerStopContainer) {
    targetContainerId { createContainer.getContainerId() }
}

task pushImage(type: DockerPushImage, dependsOn: buildImage) {
    imageName = "harbor.chainwinner.cn/tools/configserver:release"
}

sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }

    maven { url 'http://nexus.biclub.com/repository/maven-central/' }
    maven { url 'http://nexus.biclub.com/repository/biclub-maven-releases/' }
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    implementation 'org.springframework.cloud:spring-cloud-config-server'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    dockerJava 'com.github.docker-java:docker-java:3.1.2'
    dockerJava 'org.slf4j:slf4j-simple:1.7.26'
    dockerJava 'cglib:cglib:3.2.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jar {
    enabled = true
}

bootJar {
    baseName = 'configserver'
    version = '1.0-SNAPSHOT'
}

archivesBaseName = "configserver"
